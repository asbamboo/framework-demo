#!/usr/bin/env php

<?php

use asbamboo\framework\Constant;
use asbamboo\framework\kernel\ConsoleKernel;
use asbamboo\framework\kernel\KernelInterface;

require_once dirname(dirname(__DIR__)) . '/test/bootstrap.php';

/**
 * @author 李春寅 <licy2013@aliyun.com>
 * @since 2018年8月13日
 */
class Console extends ConsoleKernel
{
	/**
     *
     * {@inheritDoc}
     * @see \asbamboo\framework\kernel\KernelInterface::boot()
     */
	public function boot() : KernelInterface
	{
		parent::boot();
		
		$CommandCollection	= $this->container->get(Constant::KERNEL_CONSOLE)->commandCollection();
		
		$files	= scandir($this->getProjectDir() . DIRECTORY_SEPARATOR . 'command');
		foreach($files AS $file){
			$test_class_name	= str_replace('.php', '', $file);
			$command_name		= strtolower(str_replace('Command', '', $test_class_name)); 
			$test_class_name	= 'asbamboo\\frameworkDemo\\command\\' . $test_class_name;
			if(class_exists($test_class_name)){
				$Command		= new $test_class_name;
				if(method_exists($Command, 'getName')){
					$command_name = $Command->getName();
				}
				if(method_exists($Command, 'setContainer')){
					$Command->setContainer($this->container);
				}
				$CommandCollection->add($command_name, $Command);
			}
		}
		
		return $this;
	}
	
	/**
     *
     * {@inheritDoc}
     * @see \asbamboo\framework\kernel\HttpKernel::getProjectDir()
     */
    public function getProjectDir(): string
    {
        return dirname(__DIR__);
    }

    /**
     *
     * {@inheritDoc}
     * @see \asbamboo\framework\kernel\HttpKernel::getConfigPath()
     */
    public function getConfigPath() : string
    {
        return dirname(__DIR__) . '/config/config.php' ;
    }
}

(new Console())->run();